import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.Random;

public class SorteadorInterface extends javax.swing.JFrame {
  private ArrayList<SorteioIndividual> sorteios;

    public SorteadorInterface(GerenciadorSorteios gerenciadorSorteios) {
        initComponents();
        sorteios = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        AparecerResultado = new javax.swing.JLabel();
        BotaoSortear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setBackground(new java.awt.Color(24, 27, 35));
        jTextField1.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("SorteioJava");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 210, -1));

        AparecerResultado.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        AparecerResultado.setForeground(new java.awt.Color(255, 255, 255));
        AparecerResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(AparecerResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 230, 50));

        BotaoSortear.setBackground(new java.awt.Color(51, 102, 255));
        BotaoSortear.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        BotaoSortear.setText("Sortear");
        BotaoSortear.setBorder(null);
        BotaoSortear.setBorderPainted(false);
        BotaoSortear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSortearActionPerformed(evt);
            }
        });
        getContentPane().add(BotaoSortear, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 250, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/Components (3).png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoSortearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSortearActionPerformed
         Random random = new Random();

        // Verificar se a lista de sorteios está vazia
        if (sorteios.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Não há sorteios registrados.");
            return;
        }

        int numeroSorteado = random.nextInt(6); // Gera um número aleatório entre 0 e 5

        // Obter um sorteio aleatório da lista sorteios
        SorteioIndividual sorteio = sorteios.get(numeroSorteado);

        // Exibir o resultado na interface gráfica
        AparecerResultado.setText(sorteio.getNome() + " - Número: " + sorteio.getNumero());
    }//GEN-LAST:event_BotaoSortearActionPerformed
         
      public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GerenciadorSorteios gerenciadorSorteios = new GerenciadorSorteios();
                SorteadorInterface sorteadorInterface = new SorteadorInterface(gerenciadorSorteios);
                sorteadorInterface.setVisible(true);
            }
        });
    }
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
     public static class SorteioIndividual {
        private String nome;
        private int numero;

        public String getNome() {
            return nome;
        }

        public void setNome(String nome) {
            this.nome = nome;
        }

        public int getNumero() {
            return numero;
        }

        public void setNumero(int numero) {
            this.numero = numero;
        }
    }

    public static class CadastroSorteador {
        private static CadastroSorteador instance;
        private ArrayList<SorteioIndividual> sorteios;

        private CadastroSorteador() {
            sorteios = new ArrayList<>();
        }

        public static CadastroSorteador getInstance() {
            if (instance == null) {
                instance = new CadastroSorteador();
            }
            return instance;
        }

        public ArrayList<SorteioIndividual> getSorteios() {
            return sorteios;
        }

        public void inserirSorteio(SorteioIndividual sorteio) {
            sorteios.add(sorteio);
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AparecerResultado;
    private javax.swing.JButton BotaoSortear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
   



